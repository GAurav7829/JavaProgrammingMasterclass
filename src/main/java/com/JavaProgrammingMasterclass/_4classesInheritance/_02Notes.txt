OOP -   Object Oriented Programming
    way to model real world objects, as software objects
    contains data and code

    Class based programming
        starts with classes, blueprint for objects
        class describes data (fields) and behavior (methods), called class members
        if field is static, only one copy of field is created that belongs to class
        if field is not static, it is called instance field and each object of class has different value

    Access modifiers:
        public      : any class can access
        protected   : same package, subclass in other package
        default     : only accessible to same package
        private     : no one can access

Encapsulation
    bundling behavior and attributes in one single object
    practice of hiding fields and some methods from public access

null
    special keyword
    meaning variable/attribute has a type/field but no reference to an object
    no value is assigned
    fields with primitive datatype can not be null

getters and setters
    getters -   retrieve value from private field and return it
    setters -   set value to private fields

    purpose:
        control and protect access to private variables

this
    special keyword
    reference to the object